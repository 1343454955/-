# summer-practice
在一个数组 nums 中除一个数字只出现一次之外，其他数字都出现了三次。请找出那个只出现一次的数字。

示例 1：

输入：nums = [3,4,3,3]
输出：4
示例 2：

输入：nums = [9,1,7,9,7,9,7]
输出：1

#define indexMax  10000
int comp(int *a, int *b) {
    return (*a - *b);
}
int singleNumber(int* nums, int numsSize){ 
    int map[indexMax] = {0};
    int i, j;
    qsort(nums, numsSize,sizeof(nums[0]),comp);
    for(i = 0;i<numsSize;i++) {
        printf("%d  ",nums[i]);
    }
    int temp = nums[0];
    int flag = 0;
    j = 0;
    for(i = 0;i < numsSize; i++) {
       
        if(nums[i] == nums[j]) {
            while(nums[i] == nums[j]) {
                j++;
                if(j >= numsSize) {
                    break;
                }
            }
            flag = j-i;
            i = j - 1;
            if(flag == 1) {
               temp = nums[i]; 
               break;
            }
        }
        
    }
    return temp;
}


/*
int singleNumber(int* nums, int numsSize){
    int map[indexMax] = {0};
    int i, j;
    int min = nums[0];
    int max = nums[0];
    for(i = 0; i < numsSize; i++){
        map[nums[i]]++;
        min = min <= nums[i] ? min : nums[i];
        max = max >= nums[i] ? max : nums[i];
    }
    int temp =nums[0];
    for(i = min; i <= max; i++){
        if(map[i] == 1) {
            temp = i;
            break;
        }
    }
    return temp;
}*/




